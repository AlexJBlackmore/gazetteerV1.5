let map,borderFeatureGroup,earthquakesClusterGroup,wikisClusterGroup,POIsClusterGroup,popup,json;async function changeCountry(){map.spin(!0);const t=$("#countrySelect").val(),e=await getBorderAndCountryInfoIso(t);earthquakesClusterGroup&&map.removeLayer(earthquakesClusterGroup),wikisClusterGroup&&map.removeLayer(wikisClusterGroup),plotBorder(e),displayModal(e),showCapitalWeather(e.capital.coord),addWikiMarkers(await callWikisAPI(e.countryInfo[0])),addEarthquakeMarkers(await callEarthquakesAPI(e.countryInfo[0])),map.spin(!1)}function callEarthquakesAPI(t){const e=t.north,a=t.south,o=t.east,n=t.west,r=t.countryCode;return new Promise((t,i)=>{$.ajax({url:"./php/callEarthquakesAPI.php",type:"POST",dataType:"json",data:{north:e,south:a,east:o,west:n,isoCode:r},success:function(e){t(e.data)},error:function(t,e,a){}})})}function callFootballAPI(t){return new Promise((e,a)=>{$.ajax({url:"./php/callFootballAPI.php",type:"POST",dataType:"json",data:{isoCode:t},success:function(t){e(t.data)},error:function(t,e,a){}})})}function callWikisAPI(t){const e=t.north,a=t.south,o=t.east,n=t.west,r=t.countryCode;return new Promise((t,i)=>{$.ajax({url:"./php/callWikisAPI.php",type:"POST",dataType:"json",data:{north:e,south:a,east:o,west:n,isoCode:r},success:function(e){t(e.data)},error:function(t,e,a){}})})}function plotBorder(t){const e=t.border;borderFeatureGroup&&map.removeLayer(borderFeatureGroup),borderFeatureGroup=L.geoJSON(e).addTo(map),map.fitBounds(borderFeatureGroup.getBounds())}async function showCountryInfoModal(){map.spin(!0);const t=$("#countrySelect").val();displayModal(await getBorderAndCountryInfoIso(t)),map.spin(!1)}function displayModal(t){const e=t.countryInfo[0].countryName,a=t.countryInfo[0].capital,o=t.countryInfo[0].population,n=t.countryInfo[0].areaInSqKm,r=t.countryInfo[0].languages,i=t.countryInfo[0].countryCode;let s=t.countryInfo[0].currencyCode;t.currency&&(s=`${t.currency.name} (${t.currency.symbol})`),$("#modalTitle").html(e),$("#capitalCell").html(a),$("#currencyCell").html(s),$("#populationCell").html(new Intl.NumberFormat("en-GB",{maximumSignificantDigits:3}).format(o)),$("#areaCell").html(new Intl.NumberFormat("en-GB",{maximumSignificantDigits:3}).format(n)),$("#languagesCell").html(r),$("#countryFlag").attr("src",`https://www.countryflags.io/${i}/flat/64.png`),$("#myModal").modal({backdrop:!1})}async function displayImages(){const t=$("#countrySelect option:selected").text(),e=await callPicturesAPI(t);$("#imagesModalTitle").html(t),$("#slide1").attr("src",e.pictures.hits[0].largeImageURL),$("#slide2").attr("src",e.pictures.hits[1].largeImageURL),$("#slide3").attr("src",e.pictures.hits[2].largeImageURL),$("#slide4").attr("src",e.pictures.hits[3].largeImageURL),$("#slide5").attr("src",e.pictures.hits[4].largeImageURL),$("#imagesModal").modal({backdrop:!1})}function addEarthquakeMarkers(t){let e=null,a=null;if(t.earthquakes){a=(e=t.earthquakes).length;let o=[];for(earthquakesClusterGroup=L.markerClusterGroup(),i=0;i<a;i++){const t=e[i].lat,a=e[i].lng,n=e[i].datetime.substring(0,10),r=e[i].datetime.substring(11,19),s=e[i].depth,l=e[i].magnitude;o[i]=[t,a];const c=L.ExtraMarkers.icon({icon:"fa-bolt",iconColor:"white",markerColor:"orange-dark",shape:"square",prefix:"fa"}),d=L.marker([t,a],{icon:c}),u=`<div class="card-body">\n\t\t\t\t<h5 class="card-title text-center">There was an earthquake here!</h5>\n\t\t\t\t<br><h3 class="card-subtitle mb-2 text-center">${l} magnitude</h3>\n\t\t\t\t<h3 class="card-subtitle mb-2 text-center">${s}km depth</h3>\n\t\t\t\t<br><h6 class="card-subtitle mb-2 text-muted text-center">At <strong>${r}</strong> on  <strong>${n}</strong></h6>\n\t\t\t\t<p class="card-text text-center">This location is ${t.toFixed(4).toString()}, ${a.toFixed(4).toString()}. \n\t\t\t\t\tLearn more about how earthquakes are recorded\n\t\t\t\t\t<a href="https://www.usgs.gov/natural-hazards/earthquake-hazards/science/science-earthquakes?qt-science_center_objects=0#qt-science_center_objects" target="_blank">here.</a></p>\n\t\t\t</div>`;d.bindPopup(u),d.on("click",onClick),earthquakesClusterGroup.addLayer(d)}map.addLayer(earthquakesClusterGroup)}}function addWikiMarkers(t){let e=null,a=null;if(t.wikis){a=(e=t.wikis).length;let o=[];for(wikisClusterGroup=L.markerClusterGroup(),i=0;i<a;i++){const t=e[i].lat,a=e[i].lng,n=e[i].summary,r=e[i].title,s=e[i].wikipediaUrl,l=e[i].thumbnailImg;o[i]=[t,a];const c=L.ExtraMarkers.icon({icon:"fa-binoculars",iconColor:"white",markerColor:"blue",shape:"square",prefix:"fa"}),d=L.marker([t,a],{icon:c});let u;u=l?`<div class="card-body">\n\t\t\t\t\t<h3 class="card-subtitle mb-2 text-center">${r}</h3>\n\t\t\t\t\t<p class="text-center">${n}</p>\n\t\t\t\t\t<div style="text-align: center">\n\t\t\t\t\t<img src="${l}" alt="${n}" class="img-fluid"/>\n\t\t\t\t\t<br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<a href="https://${s}">View Wikipedia article</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`:`<div class="card-body">\n\t\t\t\t\t<h3 class="card-subtitle mb-2 text-center">${r}</h3>\n\t\t\t\t\t<p class="text-center">${n}</p>\n\t\t\t\t\t<div style="text-align: center">\n\t\t\t\t\t<br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<a href="https://${s}">View Wikipedia article</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`,d.bindPopup(u),d.on("click",onClick),wikisClusterGroup.addLayer(d)}map.addLayer(wikisClusterGroup)}}function onClick(t){t.target.getPopup().openOn(map)}async function getPosSuccess(t){map.spin(!0);const e=t.coords,a=await getBorderAndCountryInfoLatLng(e.latitude,e.longitude);$("#countrySelect").val(a.isoCode),plotBorder(a),displayModal(a),showCapitalWeather(a.capital.coord),addWikiMarkers(await callWikisAPI(a.countryInfo[0])),addEarthquakeMarkers(await callEarthquakesAPI(a.countryInfo[0])),map.spin(!1)}async function getPosError(t){map.spin(!0);const e=await getBorderAndCountryInfoIso("GB");$("#countrySelect").val(e.isoCode),plotBorder(e),displayModal(e),showCapitalWeather(e.capital.coord),addWikiMarkers(await callWikisAPI(e.countryInfo[0])),addEarthquakeMarkers(await callEarthquakesAPI(e.countryInfo[0])),map.spin(!1)}function callPicturesAPI(t){return new Promise((e,a)=>{$.ajax({url:"./php/callPicturesAPI.php",type:"POST",dataType:"json",data:{countryName:t},success:function(t){e(t.data)},error:function(t,e,a){}})})}async function displayTeams(){map.spin(!0);const t=$("#countrySelect").val(),e=await callFootballAPI(t);let a=[],o=[];for(i=0;i<e.football.length;i++){const t=e.football[i].response;for(j=0;j<t.length;j++)a.push({teamName:t[j].team.name,teamCountry:t[j].team.country,teamLogo:t[j].team.logo,founded:t[j].team.founded,address:t[j].venue.address,capacity:t[j].venue.capacity,image:t[j].venue.image,venueName:t[j].venue.name,city:t[j].venue.city}),o.push(t[j].team.name)}for(o.sort(),i=0;i<o.length;i++)$("#teamsSelect").append($("<option>",{value:o[i],text:o[i]}));for(0==a.length&&($("#teamLogo").hide(),$("#stadiumImage").hide(),$("#teamsSelect").hide(),$("#foundedIn").html("No teams found for this country. Try selecting a different one.")),i=0;i<a.length;i++)if(a[i].image&&a[i].teamLogo&&a[i].founded&&a[i].venueName&&a[i].teamName){$("#teamLogo").attr("src",a[i].teamLogo),$("#stadiumImage").attr("src",a[i].image),$("#teamName").html(a[i].teamName),$("#foundedIn").html(`This club was founded in ${a[i].founded} and currently play at: <strong>${a[i].venueName}.</strong>`),$("#teamsSelect").val(a[i].teamName);break}$("#teamsModalTitle").html(`Football teams in ${$("#countrySelect option:selected").text()}`),$("#teamsModal").modal({backdrop:!1}),map.spin(!1)}function clearTeam(){$("#teamsSelect").empty(),$("#teamLogo").attr("src",""),$("#stadiumImage").attr("src",""),$("#teamName").html(""),$("#foundedIn").html(""),$("#teamsSelect").show(),$("#teamLogo").show(),$("#stadiumImage").show(),$("#teamName").show(),$("#foundedIn").show()}async function teamSelectChange(){$("#teamsSpinner").show(),$("#teamLogo").attr("src",""),$("#teamLogo").attr("alt",""),$("#teamLogo").hide(),$("#stadiumImage").hide(),$("#stadiumImage").attr("src",""),$("#stadiumImage").attr("alt",""),$("#teamName").html(""),$("#foundedIn").html("");const t=$("#countrySelect").val(),e=await callFootballAPI(t);let a=[],o=[];for(i=0;i<e.football.length;i++){const t=e.football[i].response;for(j=0;j<t.length;j++)a.push({teamName:t[j].team.name,teamCountry:t[j].team.country,teamLogo:t[j].team.logo,founded:t[j].team.founded,address:t[j].venue.address,capacity:t[j].venue.capacity,image:t[j].venue.image,venueName:t[j].venue.name,city:t[j].venue.city}),o.push(t[j].team.name)}for($("#teamsSpinner").hide(),i=0;i<a.length;i++)if($("#teamsSelect").val()==a[i].teamName){const t=a[i].image,e=a[i].teamLogo,o=a[i].founded,n=a[i].venueName,r=(a[i].teamName,["https://media.api-sports.io/football/teams/8735.png","https://media.api-sports.io/football/venues/7437.png","https://media.api-sports.io/football/venues/7754.png","https://media.api-sports.io/football/venues/4946.png","https://media.api-sports.io/football/teams/6736.png","https://media.api-sports.io/football/teams/11335.png","https://media.api-sports.io/football/teams/8771.png"]);$("#teamLogo").show(),$("#stadiumImage").show(),$("#teamName").html(a[i].teamName),$("#teamLogo").attr("src",e),$("#stadiumImage").attr("src",t),$("#foundedIn").html(`This club was founded in ${o} and currently play at: <strong>${n}.</strong>`),t&&!r.includes(t)||($("#stadiumImage").hide(),$("#stadiumImage").attr("alt","")),e&&!r.includes(e)||($("#teamLogo").hide(),$("#teamLogo").attr("alt","")),o&&n&&$("#foundedIn").html(`This club was founded in ${o} and currently play at: <strong>${n}.</strong>`),!o&&n&&$("#foundedIn").html(`This club currently play at: <strong>${n}.</strong>`),o&&!n&&$("#foundedIn").html(`This club was founded in ${o}.`),o||n||$("#foundedIn").html("There is not much information about this club. Try selecting another.")}}function callTemperaturesAPI(t){return new Promise((e,a)=>{$.ajax({url:"./php/callTemperaturesAPI.php",type:"GET",dataType:"json",data:{isoCode:t},success:function(t){e(t.data)},error:function(t,e,a){}})})}async function displayTemperatures(){map.spin(!0);const t=$("#countrySelect").val(),e=await callTemperaturesAPI(t);let a=[],o=[];const n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];for(i=0;i<e.temperatures[0].monthVals.length;i++)a[i]=e.temperatures[0].monthVals[i],o[i]=n[i];var r=document.getElementById("temperaturesChart").getContext("2d");new Chart(r,{type:"line",data:{labels:o,datasets:[{label:"Month average",data:a,fill:!1,backgroundColor:"rgba(220,180,0,1)",borderColor:"rgba(220,180,0,1)",borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0},scaleLabel:{display:!0,labelString:"Celcius"}}]}}});$("#temperaturesModalTitle").html(`${$("#countrySelect option:selected").text()} climate`),$("#temperaturesModal").modal({backdrop:!1}),map.spin(!1)}function getBorderAndCountryInfoLatLng(t,e){return new Promise((a,o)=>{$.ajax({url:"./php/getBorderAndCountryInfo.php",type:"POST",dataType:"json",data:{lat:t,lng:e},success:function(t){a(t.data)},error:function(t,e,a){}})})}function getBorderAndCountryInfoIso(t){return new Promise((e,a)=>{$.ajax({url:"./php/getBorderAndCountryInfo.php",type:"POST",dataType:"json",data:{isoCode:t},success:function(t){e(t.data)},error:function(t,e,a){}})})}async function displayCapitalWeather(){map.spin(!0);const t=$("#countrySelect").val();showCapitalWeather((await getBorderAndCountryInfoIso(t)).capital.coord),map.spin(!1)}function showCapitalWeather(t){const e=t.lat,a=t.lon;$.ajax({url:"./php/getWeather.php",type:"GET",dataType:"json",data:{lat:e,lng:a},success:function(t){const o=t.data.weather.datetime.substring(0,10),n=t.data.weather.datetime.substring(11,19),r=capitalizeFirstLetter(t.data.weather.clouds),i=`<div class="card-body">\n\t\t\t\t\t<h5 class="card-title text-center">Weather at ${e.toFixed(4).toString()}, ${a.toFixed(4).toString()}</h5>\n\t\t\t\t\t<br><h3 class="card-subtitle mb-2 text-center" id="clouds">${r}</h3>\n\t\t\t\t\t<h3 class="card-subtitle mb-2 text-center">${t.data.weather.temperature} <sup>o</sup>C</h3>\n\t\t\t\t\t<br><h6 class="card-subtitle mb-2 text-muted text-center">${t.data.weather.stationName} weather station</h6>\n\t\t\t\t\t<p class="card-text text-center">With ${t.data.weather.humidity}% humidity and winds of ${t.data.weather.windSpeed} km/h.\n\t\t\t\t\tThis reading was taken at ${n} on ${o}.</p>\n\t\t\t\t\t<div class="text-center">\n\t\t\t\t\t<button onclick="displayChart()" type="button" class="btn btn-primary"">View pollution forecast</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;"ok"==t.status.name&&popup.setLatLng([e,a]).setContent(i).openOn(map),json=t.data.pollution},error:function(t,o,n){popup.setLatLng([e,a]).setContent("<p>Sorry, no weather info at this location. Try clicking somewhere else.</p>").openOn(map)}})}function onMapClick(t){$.ajax({url:"./php/getWeather.php",type:"GET",dataType:"json",data:{lat:t.latlng.lat,lng:t.latlng.lng},success:function(e){const a=e.data.weather.datetime.substring(0,10),o=e.data.weather.datetime.substring(11,19),n=capitalizeFirstLetter(e.data.weather.clouds),r=`<div class="card-body">\n\t\t\t\t\t<h5 class="card-title text-center">Weather at ${t.latlng.lat.toFixed(4).toString()}, ${t.latlng.lng.toFixed(4).toString()}</h5>\n\t\t\t\t\t<br><h3 class="card-subtitle mb-2 text-center" id="clouds">${n}</h3>\n\t\t\t\t\t<h3 class="card-subtitle mb-2 text-center">${e.data.weather.temperature} <sup>o</sup>C</h3>\n\t\t\t\t\t<br><h6 class="card-subtitle mb-2 text-muted text-center">${e.data.weather.stationName} weather station</h6>\n\t\t\t\t\t<p class="card-text text-center">With ${e.data.weather.humidity}% humidity and winds of ${e.data.weather.windSpeed} km/h.\n\t\t\t\t\tThis reading was taken at ${o} on ${a}.</p>\n\t\t\t\t\t<div class="text-center">\n\t\t\t\t\t<button onclick="displayChart()" type="button" class="btn btn-primary"">View pollution forecast</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;"ok"==e.status.name&&popup.setLatLng(t.latlng).setContent(r).openOn(map),json=e.data.pollution},error:function(e,a,o){popup.setLatLng(t.latlng).setContent("<p>Sorry, no weather info at this location. Try clicking somewhere else.</p>").openOn(map)}})}function capitalizeFirstLetter(t){return t.charAt(0).toUpperCase()+t.slice(1)}function timeConverter(t){var e=new Date(1e3*t),a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()];return e.getDate()+" "+a+" "+e.getHours()+":00"}function displayHowToUse(){$("#howToUseModal").modal({backdrop:!1})}function displayChart(){drawChart(),$("#chartModalTitle").html(`Forecast for ${json.coord.lat.toFixed(2)}, ${json.coord.lon.toFixed(2)}`),$("#chartModal").modal({backdrop:!1})}function drawChart(){let t=[],e=[],a=[],o=[];for(i=0;i<json.list.length;i++){const n=timeConverter(json.list[i].dt);t[i]=n,e[i]=json.list[i].components.co,a[i]=json.list[i].components.no2,o[i]=json.list[i].components.o3}var n=document.getElementById("myChart").getContext("2d");new Chart(n,{type:"line",data:{labels:t,datasets:[{label:"CO",data:e,fill:!1,backgroundColor:"rgba(0,0,255,1)",borderColor:"rgba(0,0,255,1)",borderWidth:1},{label:"NO2",data:a,fill:!1,backgroundColor:"rgba(0,255,0,1)",borderColor:"rgba(0,255,0,1)",borderWidth:1},{label:"O3",data:o,fill:!1,backgroundColor:"rgba(255,0,0,1)",borderColor:"rgba(255,0,0,1)",borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0},scaleLabel:{display:!0,labelString:"μg/m3"}}],xAxes:[{ticks:{autoSkip:!0,maxTicksLimit:6}}]}}})}$(window).on("load",async function(){$("#preloader").length&&$("#preloader").delay(100).fadeOut("slow",function(){$(this).remove()});map=L.map("mapid").setView([40,0],3),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{minZoom:3,noWrap:!0,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(map);const t=L.latLng(-89.98155760646617,-180),e=L.latLng(89.99346179538875,180),a=L.latLngBounds(t,e);map.setMaxBounds(a),map.on("drag",function(){map.panInsideBounds(a,{animate:!1})}),$.ajax({url:"./php/parseJson.php",dataType:"json",success:function(t){for(i=0;i<t.data.length;i++)$("#countrySelect").append($("<option>",{value:t.data[i].isoCode,text:t.data[i].name}))},error:function(t,e,a){alert("ParseJSON - the following error occured: "+t.status+" "+e)}});navigator.geolocation.getCurrentPosition(getPosSuccess,getPosError,{enableHighAccuracy:!0,timeout:2e4,maximumAge:0}),$("#countrySelect").on("change",changeCountry),$("#teamsSelect").on("change",teamSelectChange),$("#closeTeamsBtn").on("click",clearTeam),$("#howToUse").on("click",displayHowToUse),$("#teamsSpinner").hide(),L.easyButton("fa-camera",displayImages,"View photos of this country").addTo(map),L.easyButton("fa-temperature-low",displayTemperatures,"View monthly temperature variation in this country").addTo(map),L.easyButton("fa-futbol",displayTeams,"View football teams in this country").addTo(map),L.easyButton("fa-cloud-sun",displayCapitalWeather,"View the weather at the capital of this country").addTo(map),L.easyButton("fa-info",showCountryInfoModal,"View information about this country").addTo(map),popup=L.popup(),map.on("click",onMapClick)});